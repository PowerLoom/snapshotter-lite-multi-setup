name: Build CLI Binaries

on:
  push:
    tags:
      - 'v*'
    branches:
      - develop
  pull_request:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-native:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
          - os: macos-latest
            platform: macos
            arch: arm64

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "**/uv.lock"

    - name: Install dependencies
      run: uv sync --frozen

    - name: Build binary with PyInstaller
      run: |
        # Set environment variables for the spec file
        export PLATFORM=${{ matrix.platform }}
        export ARCH=${{ matrix.arch }}

        # Build using the spec file
        uv run pyinstaller pyinstaller.spec \
          --distpath dist \
          --workpath build \
          --clean

    - name: Test binary
      run: |
        ./dist/powerloom-snapshotter-cli-${{ matrix.platform }}-${{ matrix.arch }} --help

    - name: Create checksums
      run: |
        cd dist
        if [[ "${{ matrix.platform }}" == "macos" ]]; then
          shasum -a 256 powerloom-snapshotter-cli-${{ matrix.platform }}-${{ matrix.arch }} > powerloom-snapshotter-cli-${{ matrix.platform }}-${{ matrix.arch }}.sha256
        else
          sha256sum powerloom-snapshotter-cli-${{ matrix.platform }}-${{ matrix.arch }} > powerloom-snapshotter-cli-${{ matrix.platform }}-${{ matrix.arch }}.sha256
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: powerloom-snapshotter-cli-${{ matrix.platform }}-${{ matrix.arch }}
        path: |
          dist/powerloom-snapshotter-cli-${{ matrix.platform }}-${{ matrix.arch }}
          dist/powerloom-snapshotter-cli-${{ matrix.platform }}-${{ matrix.arch }}.sha256

  build-cross-platform:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Create Dockerfile for ARM64 build
      run: |
        cat > Dockerfile.arm64 << 'EOF'
        FROM --platform=linux/arm64 python:3.12-slim

        # Install build dependencies (this layer rarely changes)
        RUN apt-get update && apt-get install -y \
            build-essential \
            binutils \
            curl \
            && rm -rf /var/lib/apt/lists/*

        # Install uv (version pinned for consistency)
        ENV UV_VERSION=0.4.10
        RUN curl -LsSf https://github.com/astral-sh/uv/releases/download/${UV_VERSION}/uv-installer.sh | sh
        ENV PATH="/root/.cargo/bin:$PATH"

        WORKDIR /app

        # Copy only dependency files first (most cacheable layer)
        COPY pyproject.toml uv.lock ./
        COPY PYPI_README.md ./

        # Install Python dependencies (cached when deps don't change)
        RUN --mount=type=cache,target=/root/.cache/uv \
            uv sync --frozen

        # Copy source code (less frequently changing)
        COPY pyinstaller.spec ./
        COPY snapshotter_cli/ ./snapshotter_cli/

        # Build binary with cache mount for PyInstaller
        ENV PLATFORM=linux
        ENV ARCH=arm64
        RUN --mount=type=cache,target=/app/build \
            --mount=type=cache,target=/root/.cache/pyinstaller \
            uv run pyinstaller pyinstaller.spec \
            --distpath /app/dist \
            --workpath /app/build \
            --clean

        # Create checksum
        RUN cd /app/dist && sha256sum powerloom-snapshotter-cli-linux-arm64 > powerloom-snapshotter-cli-linux-arm64.sha256
        EOF

    - name: Build ARM64 binary in Docker
      run: |
        docker buildx build \
          --platform linux/arm64 \
          --cache-from type=gha,scope=buildkit-arm64 \
          --cache-to type=gha,mode=max,scope=buildkit-arm64 \
          -f Dockerfile.arm64 \
          -t powerloom-snapshotter-cli-arm64-builder \
          --load \
          .
        docker create --name extract-arm64 powerloom-snapshotter-cli-arm64-builder
        docker cp extract-arm64:/app/dist ./dist-arm64
        docker rm extract-arm64

    - name: Upload ARM64 artifacts
      uses: actions/upload-artifact@v4
      with:
        name: powerloom-snapshotter-cli-linux-arm64
        path: |
          dist-arm64/powerloom-snapshotter-cli-linux-arm64
          dist-arm64/powerloom-snapshotter-cli-linux-arm64.sha256

  release:
    needs: [build-native, build-cross-platform]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare release files
      run: |
        mkdir -p release
        for artifact in artifacts/*; do
          if [[ -d "$artifact" ]]; then
            cp $artifact/* release/
          fi
        done

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        draft: false
        prerelease: false
        files: |
          release/*
        body: |
          ## Powerloom Snapshotter CLI Binaries

          ### Installation

          #### Linux (x86_64)
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/powerloom-snapshotter-cli-linux-x86_64
          chmod +x powerloom-snapshotter-cli-linux-x86_64
          sudo mv powerloom-snapshotter-cli-linux-x86_64 /usr/local/bin/powerloom-snapshotter-cli
          ```

          #### Linux (ARM64)
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/powerloom-snapshotter-cli-linux-arm64
          chmod +x powerloom-snapshotter-cli-linux-arm64
          sudo mv powerloom-snapshotter-cli-linux-arm64 /usr/local/bin/powerloom-snapshotter-cli
          ```

          #### macOS (Apple Silicon)
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/powerloom-snapshotter-cli-macos-arm64
          chmod +x powerloom-snapshotter-cli-macos-arm64
          sudo mv powerloom-snapshotter-cli-macos-arm64 /usr/local/bin/powerloom-snapshotter-cli
          ```

          ### Verify Installation
          ```bash
          powerloom-snapshotter-cli --version
          ```

          ### Checksums
          Verify the integrity of downloaded files using the provided `.sha256` files:
          ```bash
          sha256sum -c powerloom-snapshotter-cli-<platform>-<arch>.sha256
          ```
